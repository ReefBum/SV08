###########################################################
# start_print.cfg   ~/printer_data/config/
###########################################################

###########################################################
# START PRINT
###########################################################

[delayed_gcode _print_start_wait]
gcode:
    {% if printer['gcode_macro START_PRINT'].state == 'Heating'%}
        {action_respond_info("Prepare->Heating!")}
    {% elif printer['gcode_macro START_PRINT'].state == 'Start' %}
        {action_respond_info("Heating->Start!")}
    {% endif %}

    {% if printer['gcode_macro START_PRINT'].execute|lower != 'false' %}
        START_PRINT
    {% endif %}

[gcode_macro START_PRINT]
description: 
variable_state: 'Prepare'
variable_record_extruder_temp:0
variable_max_record_extruder_temp:0
gcode:
    {% set mesh_name = "default" %}
    {% set mesh_calibrate_temp = printer.heater_bed|int if printer.heater_bed.target>10 else printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {action_respond_info("Start Sequence Initiated")}
    {% set extruder_target_temp = printer.extruder.target|int %}
    {% set bed_target_temp = printer.heater_bed.target|int %}

    {% if printer.toolhead.homed_axes != "xyz" %}
            LCD_YELLOW
            M117 Home Axis
            G28
    {% endif %}

  {% if state == 'Prepare' %}
        {action_respond_info("Prepare!")}

        {% if printer['filament_switch_sensor filament_sensor'].enable == True and
              printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
            {action_respond_info("NO Filament!!...!")}
            M117 No filament!!!
            CANCEL_PRINT
        {% endif %}

        {action_respond_info("Check Heating!")}
        M140 S{bed_target_temp}
        M104 S{extruder_target_temp}

        {% if printer.heater_bed.temperature < bed_target_temp %}
            LCD_BLUE
            M117 Bed Heating...
            {action_respond_info("Bed Heating...")}
            M190 S{bed_target_temp}
        {% endif %}

        {% if printer.extruder.temperature < extruder_target_temp %}
            LCD_RED
            M117 Nozzle Heating...
            {action_respond_info("Nozzle Heating...")}
            M109 S{extruder_target_temp} 
        {% endif %}

        {% if printer.quad_gantry_level.applied|lower != 'true' %}
            LCD_YELLOW
            M117 Quad Gantry Lvl
            QUAD_GANTRY_LEVEL
            #_CALIBRATION_ZOFFSET
        {% endif %}

    BED_MESH_CALIBRATE ADAPTIVE=1
#    BED_MESH_PROFILE LOAD=default

#        SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Start"' 
#        UPDATE_DELAYED_GCODE ID=_print_start_wait DURATION=0.5

#    {% elif state == 'Start' %}
        LCD_YELLOW
        M117 Purge Filament
        G90
        G1 X0.50 Y0.50 F9000
        G1 Z0.50 F600
        G92 E0
        G1 E30 F300
        G92 E0
        G1 E-2 F3000
        G92 E0
        G1 Z5.00 F600
        G1 X115.00 Y0.50 F9000
        G1 Z0.30 F600
        G92 E0
        G1 X230 Y0.50 Z0.30 E20 F1800
        G92 E0
        G1 Z1.00 E-2 F3000
        G92 E0
        M73 P0 ; start progress bar
        M117 Printing...
        {action_respond_info("Start Print!")}
#  {% endif %}

        SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Start"'
        UPDATE_DELAYED_GCODE ID=_print_start_wait DURATION=0.5

    {% elif state == 'Start' %}
        LCD_YELLOW
        M117 Printing Layer 1
        {action_respond_info("Start Print!")}
    {% endif %}

###########################################################
# END PRINT
###########################################################

[gcode_macro END_PRINT]
description: 
variable_state: 'normal'
gcode:
    {% set z_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance|int %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    M400
    M117 PRINT FINISHED!
    SET_GCODE_OFFSET Z_ADJUST=+0.00 MOVE=1
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    G91
    G1 E-15 F3000

    {% if (printer.gcode_move.position.z + 25) < z_max %}
        G1 Z+25 F3000
    {% else %}
        G1 Z+{(z_max - printer.gcode_move.position.z)} F3000
    {% endif %}

    G90
    G1 X0 Y360 F9000
    _ALL_FAN_OFF
    TURN_OFF_HEATERS
    BED_MESH_CLEAR
    M84
    M220 S100
    M221 S100
    LCD_DEFAULT
    M117 SV08 Ready...
    CLEAR_PAUSE

    {action_respond_info("Finish Print!")}

###########################################################
# CANCEL PRINT
###########################################################

[gcode_macro CANCEL_PRINT]
description: 
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set x_park = printer['gcode_macro _global_var'].cancel_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].cancel_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].cancel_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    CANCEL_PRINT_BASE

    M117 Cancel Print!!!
    G91
    {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
          printer['filament_switch_sensor filament_sensor'].filament_detected == True
    %}
        {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
              printer.extruder.temperature >= e_mintemp
        %}
            G1 E-{e_restract} F500
        {% else %}
            {action_respond_info("Nozzle not hot enough")}
        {% endif %}
    {% endif %}

    {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
        G1 Z+10 F3000
    {% else %}
        G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
    {% endif %}
        G90
        G1 X{x_park} Y{y_park} F9000

    TURN_OFF_HEATERS
    _ALL_FAN_OFF
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    CLEAR_PAUSE
    LCD_DEFAULT
    M84 X Y Z E
    M117 Ready
    {action_respond_info("Cancel Print Success!")}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0  
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0

###########################################################
# PAUSE PRINT
###########################################################

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
        {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}

        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}
        
        {action_respond_info("Pause Print!")}
        
        PAUSE_BASE
        M117 Pause Print!!!
        G91
        {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
            G1 Z+5 F3000
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
        {% endif %}
        G90
        {% if printer.gcode_move.position.x != x_park and
                printer.gcode_move.position.y != y_park     
        %}
            G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
        {% endif %}

        M104 S{printer.extruder.target}
    
        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
                    printer['filament_switch_sensor filament_sensor'].filament_detected == True
                %}
                    G91
                    G1 E-{e_restract} F300
                    G90
                {% elif printer['filament_switch_sensor filament_sensor'].enabled == True and 
                        printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
                    G91
                    G1 E+95 F300
                    G1 E-10 F1500
                    G1 E-20 F600
                    M400
                    G4 P3000
                    G1 E-50 F300 
                    G90
                {% endif %}
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
                G1 E+25 F300
                G1 E-10 F1500
                G1 E-20 F600
                M400
                G4 P3000
                G1 E-50 F300 
                G90
            {% endif %}
        {% endif %}
    {% endif %}

###########################################################
# RESUME PRINT
###########################################################

[delayed_gcode _resume_wait]
gcode:
    {% if printer['gcode_macro RESUME'].execute|lower != 'false' %}
        RESUME
    {% endif %}

[gcode_macro RESUME]
description: Pause the actual running print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer["filament_switch_sensor filament_sensor"].enable == True and
              printer["filament_switch_sensor filament_sensor"].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
                LCD_WHITE
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% else %}
                LCD_BLUE
                M140 S{extruder_target_temp}
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M190 S{extruder_target_temp}
                LCD_WHITE
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% endif %}
            {action_respond_info("Print resumming!")}
            LCD_YELLOW
            RESUME_BASE
        {% endif %}
    {% elif state == 'normal' %}
        {% if printer['filament_switch_sensor filament_sensor'].enable != True and
              printer['filament_switch_sensor filament_sensor'].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {action_respond_info("Print resumming!")}
            LCD_YELLOW
            G91
            G1 E{e_restract} F300
            G90
            M117 Printing now!!!
            RESUME_BASE
        {% endif %}
    {% endif %}
